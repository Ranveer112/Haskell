{-# GHC_PRAGMA INTERFACE VERSION 1 #-}
interface MakeCode where
import CodeTable(codeTable)
import Types(Bit, Tree)
codeTable :: Tree -> [(Char, [Bit])]
	{-# GHC_PRAGMA _A_ 1 _U_ 1 _N_ _N_ _N_ #-}
codes :: [Char] -> Tree
	{-# GHC_PRAGMA _A_ 1 _U_ 1 _N_ _F_ _IF_ARGS_ 0 1 X 16 \ (u0 :: [Char]) -> case _APP_ _ORIG_ Frequency frequency [u0] of { _ALG_ (u1 :: [(Char, Int)]) -> _APP_ _ORIG_ MakeTree makeTree [u1] } _N_ #-}

